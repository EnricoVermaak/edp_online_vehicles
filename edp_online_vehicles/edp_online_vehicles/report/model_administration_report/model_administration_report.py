# Copyright (c) 2024, NexTash and contributors
# For license information, please see license.txt

import frappe
from frappe import _
from frappe.query_builder import DocType


def execute(filters=None):
	columns, data = get_columns(), get_data(filters)
	return columns, data


def get_columns():
	columns = [
		{"label": _("Model Code"), "fieldname": "model_code", "fieldtype": "Data", "width": 150},
		{
			"label": _("Model Code Common"),
			"fieldname": "model_code_common",
			"fieldtype": "Data",
			"width": 150,
		},
		{
			"label": _("Model Description"),
			"fieldname": "model_description",
			"fieldtype": "Data",
			"width": 150,
		},
		{"label": _("Model Year"), "fieldname": "model_year", "fieldtype": "Data", "width": 150},
		{"label": _("Proper Name"), "fieldname": "proper_name", "fieldtype": "Data", "width": 150},
		{"label": _("NSC No"), "fieldname": "nsc_no", "fieldtype": "Data", "width": 150},
		{"label": _("Series Code"), "fieldname": "series_code", "fieldtype": "Data", "width": 150},
		{"label": _("NaamSA Code"), "fieldname": "naamsa_code", "fieldtype": "Data", "width": 150},
		{"label": _("Make Code"), "fieldname": "make_code", "fieldtype": "Data", "width": 150},
		{"label": _("Derivitive"), "fieldname": "derivitive", "fieldtype": "Data", "width": 150},
		{"label": _("Brand"), "fieldname": "brand", "fieldtype": "Data", "width": 150},
		{
			"label": _("Series Description"),
			"fieldname": "series_description",
			"fieldtype": "Data",
			"width": 150,
		},
		{
			"label": _("NaamSA Colour Code"),
			"fieldname": "naamsa_colour_code",
			"fieldtype": "Data",
			"width": 150,
		},
		{"label": _("M&M Code"), "fieldname": "mm_code", "fieldtype": "Data", "width": 150},
		{"label": _("CO2 Emission"), "fieldname": "co2_emission", "fieldtype": "Data", "width": 150},
		{
			"label": _("Cost Price (Excl)"),
			"fieldname": "cost_price_excl",
			"fieldtype": "Currency",
			"width": 150,
		},
		{
			"label": _("Dealer Billing (Excl)"),
			"fieldname": "dealer_billing_excl",
			"fieldtype": "Currency",
			"width": 150,
		},
		{
			"label": _("Suggested Retail (Excl)"),
			"fieldname": "suggested_retail_excl",
			"fieldtype": "Currency",
			"width": 150,
		},
		{
			"label": _("Rental Price (Excl)"),
			"fieldname": "rental_price_excl",
			"fieldtype": "Currency",
			"width": 150,
		},
		{
			"label": _("Export Price (Excl)"),
			"fieldname": "export_price_excl",
			"fieldtype": "Currency",
			"width": 150,
		},
		{
			"label": _("Discount Tolerance (%)"),
			"fieldname": "discount_tolerance_",
			"fieldtype": "Data",
			"width": 150,
		},
		{"label": _("Tyre Size Front"), "fieldname": "tyre_size_front", "fieldtype": "Data", "width": 150},
		{
			"label": _("Tyre Weight Front"),
			"fieldname": "tyre_weight_front",
			"fieldtype": "Data",
			"width": 150,
		},
		{"label": _("Tyre Size Rear"), "fieldname": "tyre_size_rear", "fieldtype": "Data", "width": 150},
		{"label": _("Tyre Weight Rear"), "fieldname": "tyre_weight_rear", "fieldtype": "Data", "width": 150},
		{"label": _("Load Capacity"), "fieldname": "load_capacity", "fieldtype": "Data", "width": 150},
		{"label": _("Lift (mm)"), "fieldname": "lift_mm", "fieldtype": "Data", "width": 150},
		{"label": _("NATIS Code"), "fieldname": "natis_code", "fieldtype": "Data", "width": 150},
		{"label": _("Drivetrain"), "fieldname": "drivetrain", "fieldtype": "Data", "width": 150},
		{"label": _("Differential"), "fieldname": "differential", "fieldtype": "Data", "width": 150},
		{"label": _("Transmission"), "fieldname": "transmission", "fieldtype": "Data", "width": 150},
		{"label": _("Gearbox"), "fieldname": "gearbox", "fieldtype": "Data", "width": 150},
		{"label": _("Fuel Type"), "fieldname": "fuel_type", "fieldtype": "Data", "width": 150},
		{
			"label": _("Total No of Axles"),
			"fieldname": "total_no_of_axles",
			"fieldtype": "Data",
			"width": 150,
		},
		{"label": _("Driving Axles"), "fieldname": "driving_axles", "fieldtype": "Data", "width": 150},
		{
			"label": _("Engine Displacement"),
			"fieldname": "engine_displacement",
			"fieldtype": "Data",
			"width": 150,
		},
		{"label": _("Net Power"), "fieldname": "net_power", "fieldtype": "Data", "width": 150},
		{"label": _("No of Wheels"), "fieldname": "no_of_wheels", "fieldtype": "Data", "width": 150},
		{"label": _("GVM"), "fieldname": "gvm", "fieldtype": "Data", "width": 150},
		{"label": _("GCM"), "fieldname": "gcm", "fieldtype": "Data", "width": 150},
		{"label": _("Tare"), "fieldname": "tare", "fieldtype": "Data", "width": 150},
		{"label": _("Mast Reach (mm)"), "fieldname": "mast_reach_mm", "fieldtype": "Data", "width": 150},
		{"label": _("Sitting Capacity"), "fieldname": "sitting_capacity", "fieldtype": "Data", "width": 150},
		{
			"label": _("Standing Capacity"),
			"fieldname": "standing_capacity",
			"fieldtype": "Data",
			"width": 150,
		},
		{"label": _("Overall Length"), "fieldname": "overall_length", "fieldtype": "Data", "width": 150},
		{"label": _("Overall Height"), "fieldname": "overall_height", "fieldtype": "Data", "width": 150},
		{"label": _("Overall Width"), "fieldname": "overall_width", "fieldtype": "Data", "width": 150},
		{
			"label": _("Country of Export"),
			"fieldname": "country_of_export",
			"fieldtype": "Data",
			"width": 150,
		},
		{
			"label": _("Country of Import"),
			"fieldname": "country_of_import",
			"fieldtype": "Data",
			"width": 150,
		},
		{"label": _("Category"), "fieldname": "category", "fieldtype": "Data", "width": 150},
		{"label": _("Class"), "fieldname": "class", "fieldtype": "Data", "width": 150},
		{
			"label": _("Show on Vehicles Stock Availability"),
			"fieldname": "show_on_vehicles_stock_availability",
			"fieldtype": "Check",
			"width": 150,
		},
		{
			"label": _("Mark as Discontinued"),
			"fieldname": "mark_as_discontinued",
			"fieldtype": "Check",
			"width": 150,
		},
		{
			"label": _("Manuals Available"),
			"fieldname": "manuals_available",
			"fieldtype": "Check",
			"width": 150,
		},
		{
			"label": _("Enable ENatis Registration"),
			"fieldname": "enable_enatis_registration",
			"fieldtype": "Check",
			"width": 150,
		},
		{
			"label": _("Service Inspection Interval (KM/ Hours)"),
			"fieldname": "service_inspection_interval_km_hours",
			"fieldtype": "Int",
			"width": 150,
		},
		{
			"label": _("Service Inspection Interval (Months)"),
			"fieldname": "service_inspection_interval_months",
			"fieldtype": "Int",
			"width": 150,
		},
		{
			"label": _("Service Interval (Months)"),
			"fieldname": "service_interval_months",
			"fieldtype": "Int",
			"width": 150,
		},
		{
			"label": _("Service Period Limit (Months)"),
			"fieldname": "service_period",
			"fieldtype": "Int",
			"width": 150,
		},
		{
			"label": _("Service Odo Limit (KM/ Hours)"),
			"fieldname": "service_limit_km_hours",
			"fieldtype": "Int",
			"width": 150,
		},
		{"label": _("Warranty Period"), "fieldname": "warranty_period", "fieldtype": "Int", "width": 150},
		{
			"label": _("Warranty Limit (KM/ Hours)"),
			"fieldname": "warranty_limit_km_hours",
			"fieldtype": "Int",
			"width": 150,
		},
		{
			"label": _("Pass (%) Requirement"),
			"fieldname": "pass_requirement",
			"fieldtype": "Percent",
			"width": 150,
		},
		{
			"label": _("Load Test Interval (KM/ Hours)"),
			"fieldname": "load_test_interval",
			"fieldtype": "Int",
			"width": 150,
		},
		{
			"label": _("Load Test Interval (Months)"),
			"fieldname": "load_test_interval_months",
			"fieldtype": "Int",
			"width": 150,
		},
	]

	return columns


def get_data(filters):
	model = DocType("Model Administration")

	query = frappe.qb.from_(model).select(
		model.model_code,
		model.model_code_common,
		model.model_description,
		model.model_year,
		model.proper_name,
		model.nsc_no,
		model.series_code,
		model.naamsa_code,
		model.make_code,
		model.derivitive,
		model.brand,
		model.series_description,
		model.naamsa_colour_code,
		model.mm_code,
		model.co2_emission,
		model.cost_price_excl,
		model.dealer_billing_excl,
		model.suggested_retail_excl,
		model.rental_price_excl,
		model.export_price_excl,
		model.discount_tolerance_,
		model.tyre_size_front,
		model.tyre_weight_front,
		model.tyre_size_rear,
		model.tyre_weight_rear,
		model.load_capacity,
		model.lift_mm,
		model.drivetrain,
		model.differential,
		model.transmission,
		model.gearbox,
		model.fuel_type,
		model.total_no_of_axles,
		model.driving_axles,
		model.engine_displacement,
		model.net_power,
		model.no_of_wheels,
		model.gvm,
		model.gcm,
		model.tare,
		model.mast_reach_mm,
		model.sitting_capacity,
		model.standing_capacity,
		model.overall_length,
		model.overall_height,
		model.overall_width,
		model.country_of_export,
		model.country_of_import,
		model.category,
		model.class_,
		model.show_on_vehicles_stock_availability,
		model.mark_as_discontinued,
		model.manuals_available,
		model.enable_enatis_registration,
		model.service_inspection_interval_km_hours,
		model.service_inspection_interval_months,
		model.service_interval_months,
		model.service_period,
		model.service_limit_km_hours,
		model.warranty_period,
		model.warranty_limit_km_hours,
		model.pass_requirement,
		model.load_test_interval,
		model.load_test_interval_months,
	)

	if filters.get("brand"):
		query = query.where(model.brand == filters.brand)

	return query.run(as_dict=True)
